FORMAT: 1A
HOST: https://liveapidev2.clinicalink.com/Services

# ClinicalInk API
Welcome to the ClinicalInk API reference. The ClinicalInk API is designed using a REST-based architecture. This documentation lists and describes the individual resources you can used to manipulate objects on the ClinicalInk Platform.  If you are new to these APIs, please review the information in this section.

## HTTP Response Codes
The response from Storage API will have an
[HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) that will help
you determine if the request was successful. In case of an error, the HTTP status code
will help you determine the cause of the error. The status codes used by Storage API are
listed in the below tables.

### Success responses

<table>
    <tr>
        <td width="20%">200 <code>OK</code></td>
        <td>The request was successful.</td>
    </tr>
    <tr>
        <td>201 <code>Created</code></td>
        <td>The request was successful and a new resource was created.</td>
    </tr>
    <tr>
        <td>202 <code>Accepted</code></td>
        <td>Used for <a href='#introduction/synchronous-and-asynchronous-calls'>Asynchronous tasks</a>. A job resource is returned. The actual result must be obtained in another API call.</td>
    </tr>
    <tr>
        <td>204 <code>No Content</code></td>
        <td>The request was successful but there is nothing to return. Usually used as a response of DELETE requests.</td>
    </tr>
</table>

### Error responses
<table>
    <tr>
        <td width="20%">400 <code>Bad Request</code></td>
        <td>The request was invalid. Usually caused by invalid input data (missing arguments, invalid arguments values, etc.). The cause of the error is described in the response.</td>
    </tr>
    <tr>
        <td>401 <code>Unauthorized</code></td>
        <td>Authentication failed.</td>
    </tr>
    <tr>
        <td>403 <code>Forbidden</code></td>
        <td>You don't have access to the resource.</td>
    </tr>
    <tr>
        <td>404 <code>Not Found</code></td>
        <td>You're asking for something that doesn't exist.</td>
    </tr>
</table>


## Authentication
The Clinical API supports both Basic Authentication and Certificate-Based Authentication.

### Basic Authentication

HTTP Basic authentication uses standard HTTP headers. Client side applications can send server authentication credentials via the Authorization header. The Authorization header is constructed as follows:
1. Username and password are combined into a single string, separated by a colon -username:password
2. The resulting string is then encoded using Base64 encoding
3. The authorization method (i.e. Basic) and a space is placed before the encoded string

For example, if the user name is “clinicalink” and the password is “pa$$word”, the Authorization header would be as follows:

`Authorization: Basic Y2xpbmljYWxpbms6cGEkJHdvcmQNCg==`

### Certificate Based Authentication
The certificate’s identity (properties) will facilitate service authorization.  Certificates are to be provided by the customer to Clinical Ink. These certificates must contain the public key, and should be signed from a trusted root certificate authority wherever possible.  Clinical Ink is to maintain the public key for the certificate, and the customer is to maintain the client certificate’s private key to negotiate a valid request.

A user must be created for the SureSource system that has Web Services permissions to access the service for each study environment (UAT and Live). A single account can access multiple study environments. Clinical Ink will associate the provided certificate to the user account wherever certificate authentication is requested. The customer is responsible to ensure to request that the account be associated to any future studies where they will be accessing the Validations web service.

## Feedback and Help
- If you have ideas about how we can improve this documentation, go [here](https://support.clinicalink.com/hc/en-us/requests/new) to log your feedback.
- If you need further help with these services, please contact our Customer Support team at support@clinicalink.com.

# Group Validations

## Get Validations By Date/Time Range  [/CIValidationService.svc/getvalidations/{studyid}/{packageid}/{startDate}/{endDate}/{startTime}/{endTime}]

### Get Validations [GET]
The GetValidations operation will return all validations created within a specified time frame for a particular study.

+ Parameters
    + studyid: `aea4a8ff-789a-400f-8a61-8f4487aa37f` (required, guid) - Study Id
    + packageid: `4484efa7-ca9c-48ad-8736-02d024fd1ce6` (required, guid) - Export Package Id
    + startDate: `2018-03-01` (required, date) - Start Date   (format: YYYY-MM-DD)
    + endDate: `2018-04-01` (required, date) - End Date   (format: YYYY-MM-DD)
    + startTime: 0 (required, number) - Start Time (e.g.  12AM = 0,  11:59PM = 2359)
    + endTime: 2359 (required, number) - End Time (e.g.  12AM = 0,  11:59PM = 2359)

+ Request
    + Headers

            Authorization: Basic (base-64 user/password)
            Accept: application/json

+ Response 200 (application/json)
    + Body

           {
    "ResponseDateTime": "2018-06-25T11:28:54.0382610-04:00",
    "isSuccess": true,
    "message": "success",
    "statusCode": 201,
    "validationModels": [
        {
            "CreatedDateTime": "2/22/2018 6:31:47 PM -05:00",
            "Description": "Required: Reason for dose change of TEST 6",
            "Id": "f36ead65-e436-4554-a1a3-180f0a5d14a4",
            "LastModifiedDateTime": "2/22/2018 6:31:47 PM -05:00",
            "LastModifiedUserId": "785e018c-1fcf-4ee4-860d-5aa563290f5d",
            "LastModifiedUserName": "test",
            "RandomizationNum": "",
            "ReasonForOverride": "",
            "ScreeningNum": "111444",
            "SiteId": "54e62bde-34d1-40e1-8932-c15fc4b288ac",
            "SiteName": "fake site",
            "SiteNumber": "sit1",
            "Status": 0,
            "StudyId": "2eeaca08-c572-4849-b6a8-11a1366e2896",
            "SubjectId": "11239d97-6cde-42f6-9d60-ee47476639e1",
            "ValidationFields": [
                {
                    "DataSetName": "Dataset 111",
                    "FieldDefinitionId": "f02c1a83-ffed-44ca-a056-65c8ca1258a4",
                    "FieldName": "Reason for dose change of TEST 66",
                    "FormId": "5816947e-1cf3-4147-8bc6-a86ff27225d7",
                    "FormName": "Fake Form",
                    "ParamName": "param1_TEST66",
                    "VisitId": "cbf750ca-9f8f-4e3d-952c-30695d3395b1",
                    "VisitName": "Fake Visit 1"
                }
            ]
        },
   ]
}